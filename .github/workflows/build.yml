name: esp-idf build & unit-test (build-only)

on:
  push:
    branches:
      - '**'          # qualunque branch
  pull_request:
    branches:
      - main

env:
  # Il path dei componenti che la Unit-Test App deve “vedere”
  EXTRA_COMPONENT_DIRS: ${{ github.workspace }}/components

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Clona il repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ Installa toolchain ESP-IDF 5.4 (cache automatica)
      - name: Setup ESP-IDF
        uses: espressif/esp-idf-ci-action@v1
        with:
          target: esp32
          path: ${{ github.workspace }}
          command: true        # nessun idf.py qui; lo faremo negli step dopo

      # 3️⃣ Build del firmware “normale”
      - name: Build main firmware
        run: idf.py build

      # 4️⃣ Build della Unit-Test App con SOLO il componente 'main'
      - name: Build Unit-Test App (main)
        run: |
          cd "$IDF_PATH/tools/unit-test-app"
          idf.py -T main -DSDKCONFIG_DEFAULTS=sdkconfig.defaults build

      # 5️⃣ ( opzionale ) carica gli artefatti bin/elf
      - name: Upload artefacts
        uses: actions/upload-artifact@v4
        with:
          name: fw-and-tests
          path: |
            build/*.bin
            build/*.elf
            tools/unit-test-app/build/ut_app/*.elf
