version: '3.8'

services:
  # Local MQTT broker for testing
  mqtt-broker:
    image: emqx/emqx:latest
    container_name: mqtt-test-broker
    ports:
      - "1883:1883"     # MQTT TCP
      - "8083:8083"     # MQTT WebSocket  
      - "8084:8084"     # MQTT SSL
      - "18083:18083"   # Dashboard
    environment:
      EMQX_NAME: "mqtt-test-broker"
      EMQX_HOST: "127.0.0.1"
      # Allow anonymous connections for testing
      EMQX_ALLOW_ANONYMOUS: "true"
      EMQX_ACL_NOMATCH: "allow"
    volumes:
      - mqtt-data:/opt/emqx/data
    healthcheck:
      test: ["CMD", "emqx", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - mqtt-test-net

  # Test runner container
  e2e-tests:
    build: 
      context: .
      dockerfile: Dockerfile.test
    container_name: mqtt-e2e-tests
    depends_on:
      mqtt-broker:
        condition: service_healthy
    environment:
      MQTT_BROKER_HOST: "mqtt-broker"
      MQTT_BROKER_PORT: "1883"
      PYTEST_ARGS: "-v --tb=short"
    volumes:
      - .:/app/tests
      - ../../../..:/app/esp32_project:ro  # Mount ESP32 project as read-only
    working_dir: /app/tests
    command: ["python", "-m", "pytest", "test_basic_commands.py", "-v"]
    networks:
      - mqtt-test-net

  # MQTT client for manual testing
  mqtt-client:
    image: efrecon/mqtt-client
    container_name: mqtt-test-client
    depends_on:
      - mqtt-broker
    environment:
      MQTT_BROKER: "mqtt-broker:1883"
    networks:
      - mqtt-test-net
    command: ["sleep", "3600"]  # Keep container running

volumes:
  mqtt-data:

networks:
  mqtt-test-net:
    driver: bridge